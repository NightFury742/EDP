# Generated by Django 5.1.6 on 2025-03-28 17:59

import django.contrib.postgres.fields
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MedicalTest',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('test_code', models.CharField(max_length=20, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('short_name', models.CharField(max_length=50)),
                ('description', models.TextField()),
                ('preconditions', models.TextField()),
                ('test_category', models.CharField(max_length=20)),
                ('test_subcategory', models.CharField(max_length=20)),
                ('test_parameters', models.JSONField()),
                ('sample_type', models.CharField(max_length=20)),
                ('turnaround_time', models.IntegerField()),
                ('reference_range_format', models.CharField(max_length=20)),
                ('units', models.CharField(max_length=20)),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('dob', models.DateField()),
                ('age', models.IntegerField()),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], null=True)),
                ('blood_group', models.CharField(max_length=5)),
                ('contact_number', models.CharField(max_length=15)),
                ('emergency_contact_number', models.CharField(max_length=15)),
                ('address', models.TextField()),
                ('aadhar', models.CharField(max_length=12)),
                ('is_disabled', models.BooleanField()),
                ('disabilities_or_diseases', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50, null=True), size=None)),
                ('allergies', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50, null=True), size=None)),
                ('medical_history', models.TextField(blank=True, null=True)),
                ('profile_photo', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('status', models.CharField(choices=[('active', 'Active'), ('deceased', 'Deceased'), ('discharged', 'Discharged'), ('inactive', 'Inactive')], default='active')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Rooms',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ward_type', models.CharField(max_length=20)),
                ('floor_number', models.IntegerField()),
                ('room_number', models.IntegerField()),
                ('bed_number', models.IntegerField()),
                ('is_admitted', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('dob', models.DateField()),
                ('age', models.IntegerField()),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], null=True)),
                ('medical_license_number', models.CharField(max_length=50)),
                ('working_hours', models.TextField()),
                ('contact_number', models.CharField(max_length=15)),
                ('email_id', models.EmailField(max_length=254)),
                ('aadhar', models.CharField(max_length=12)),
                ('address', models.TextField()),
                ('qualifications', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), size=None)),
                ('specializations', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), size=None)),
                ('years_of_experience', models.IntegerField()),
                ('profile_photo', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('status', models.CharField(choices=[('active', 'Active'), ('on-leave', 'On-Leave'), ('retired', 'Retired'), ('inactive', 'Inactive')], default='active')),
                ('department_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.department')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='department',
            name='head_doctor_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main_app.doctor'),
        ),
        migrations.CreateModel(
            name='Diagnosis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('diagnosis_date', models.DateField(default=django.utils.timezone.now)),
                ('diagnosis_time', models.TimeField(default=None)),
                ('blood_pressure', models.CharField(max_length=15)),
                ('blood_sugar', models.CharField(max_length=15)),
                ('SPo2', models.IntegerField()),
                ('heart_rate', models.IntegerField()),
                ('diagnosis_summary', models.TextField()),
                ('tests', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=20), default=list, size=None)),
                ('status', models.CharField(choices=[('ongoing', 'Ongoing'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='ongoing', max_length=10)),
                ('visiting_doctor_id', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='main_app.doctor')),
                ('patient_id', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='main_app.patient')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('prescription_date', models.DateField()),
                ('additional_notes', models.TextField()),
                ('status', models.CharField(default='inactive', max_length=15)),
                ('diagnosis_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.diagnosis')),
                ('patient_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.patient')),
                ('prescribed_by_doctor_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.doctor')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PresciptionDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('drug', models.CharField(max_length=100)),
                ('dosage', models.CharField(max_length=100)),
                ('frequency', models.CharField(max_length=100)),
                ('duration', models.CharField(max_length=100)),
                ('diagnosis_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.diagnosis')),
                ('patient_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.patient')),
                ('prescribed_by_doctor_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.doctor')),
                ('prescription_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.prescription')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Allotment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('admission_date', models.DateField()),
                ('admission_time', models.TimeField()),
                ('discharge_date', models.DateField(null=True)),
                ('discharge_notes', models.TextField(null=True)),
                ('doctor_incharge_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.doctor')),
                ('patient_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.patient')),
                ('room_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.rooms')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TestPrescribed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('test_date', models.DateField()),
                ('test_time', models.TimeField()),
                ('test_results', models.TextField()),
                ('test_result_files', models.FileField(blank=True, null=True, upload_to='test_results/')),
                ('comments', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='active', max_length=20)),
                ('diagnosis_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tests_prescribed', to='main_app.diagnosis')),
                ('ordering_doctor_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.doctor')),
                ('patient_id', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='main_app.patient')),
                ('test_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.medicaltest')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
